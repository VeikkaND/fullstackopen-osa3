{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Veikka\\\\Desktop\\\\yliopisto\\\\fullstackopen\\\\fullstackopen\\\\osa2\\\\puhelinluettelo\\\\src\\\\components\\\\names.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Names = _ref => {\n  let {\n    names,\n    numberService,\n    setPersons,\n    setNamesToShow,\n    setNotiMessage,\n    setNotiPerson\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: names.map(name => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [name.name, \" \", name.number, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (window.confirm(`Delete ${name.name} ?`)) {\n            numberService.remove(name.id).then(() => {\n              const newNames = names.filter(n => n.name != name.name);\n              setPersons(newNames);\n              setNamesToShow(newNames);\n              setNotiMessage(\"Deleted\");\n              setNotiPerson(name.name);\n              setTimeout(() => {\n                setNotiMessage(null);\n              }, 3000);\n            }).catch(error => {\n              setNotiMessage(\"Information\");\n              setNotiPerson(`of ${name.name} has already been removed from server!`);\n              setTimeout(() => {\n                setNotiMessage(null);\n              }, 3000);\n            });\n          }\n        },\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)]\n    }, name.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n_c = Names;\nexport default Names;\nvar _c;\n$RefreshReg$(_c, \"Names\");","map":{"version":3,"names":["Names","_ref","names","numberService","setPersons","setNamesToShow","setNotiMessage","setNotiPerson","_jsxDEV","children","map","name","number","onClick","window","confirm","remove","id","then","newNames","filter","n","setTimeout","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Veikka/Desktop/yliopisto/fullstackopen/fullstackopen/osa2/puhelinluettelo/src/components/names.js"],"sourcesContent":["const Names = ({names, numberService, setPersons, setNamesToShow,\r\nsetNotiMessage, setNotiPerson}) => {\r\n    return (\r\n        <div>\r\n            {names.map(name => \r\n            <p key={name.name}>\r\n                {name.name} {name.number}\r\n                <button onClick={\r\n                    () => {\r\n                        if(window.confirm(`Delete ${name.name} ?`)){\r\n                            numberService.remove(name.id)\r\n                                .then(() => {\r\n                                    const newNames = names.filter(\r\n                                        n => n.name != name.name)\r\n                                    setPersons(newNames)\r\n                                    setNamesToShow(newNames)\r\n                                    setNotiMessage(\"Deleted\")\r\n                                    setNotiPerson(name.name)\r\n                                    setTimeout(() => {\r\n                                        setNotiMessage(null)\r\n                                    }, 3000)\r\n                                })\r\n                                .catch(error => {\r\n                                    setNotiMessage(\"Information\")\r\n                                    setNotiPerson(`of ${name.name} has already been removed from server!`)\r\n                                    setTimeout(() => {\r\n                                        setNotiMessage(null)\r\n                                    }, 3000)\r\n                                })\r\n                        }\r\n                    }}>\r\n                    delete\r\n                </button>\r\n            </p>)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Names"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,IAAA,IACqB;EAAA,IADpB;IAACC,KAAK;IAAEC,aAAa;IAAEC,UAAU;IAAEC,cAAc;IAChEC,cAAc;IAAEC;EAAa,CAAC,GAAAN,IAAA;EAC1B,oBACIO,OAAA;IAAAC,QAAA,EACKP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACfH,OAAA;MAAAC,QAAA,GACKE,IAAI,CAACA,IAAI,EAAC,GAAC,EAACA,IAAI,CAACC,MAAM,eACxBJ,OAAA;QAAQK,OAAO,EACXA,CAAA,KAAM;UACF,IAAGC,MAAM,CAACC,OAAO,CAAE,UAASJ,IAAI,CAACA,IAAK,IAAG,CAAC,EAAC;YACvCR,aAAa,CAACa,MAAM,CAACL,IAAI,CAACM,EAAE,CAAC,CACxBC,IAAI,CAAC,MAAM;cACR,MAAMC,QAAQ,GAAGjB,KAAK,CAACkB,MAAM,CACzBC,CAAC,IAAIA,CAAC,CAACV,IAAI,IAAIA,IAAI,CAACA,IAAI,CAAC;cAC7BP,UAAU,CAACe,QAAQ,CAAC;cACpBd,cAAc,CAACc,QAAQ,CAAC;cACxBb,cAAc,CAAC,SAAS,CAAC;cACzBC,aAAa,CAACI,IAAI,CAACA,IAAI,CAAC;cACxBW,UAAU,CAAC,MAAM;gBACbhB,cAAc,CAAC,IAAI,CAAC;cACxB,CAAC,EAAE,IAAI,CAAC;YACZ,CAAC,CAAC,CACDiB,KAAK,CAACC,KAAK,IAAI;cACZlB,cAAc,CAAC,aAAa,CAAC;cAC7BC,aAAa,CAAE,MAAKI,IAAI,CAACA,IAAK,wCAAuC,CAAC;cACtEW,UAAU,CAAC,MAAM;gBACbhB,cAAc,CAAC,IAAI,CAAC;cACxB,CAAC,EAAE,IAAI,CAAC;YACZ,CAAC,CAAC;UACV;QACJ,CAAE;QAAAG,QAAA,EAAC;MAEP;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GA3BLjB,IAAI,CAACA,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA4Bd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEd,CAAC;AAAAC,EAAA,GArCK7B,KAAK;AAuCX,eAAeA,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}